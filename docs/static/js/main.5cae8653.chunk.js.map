{"version":3,"sources":["Components/Images/coughing__monochromatic.svg","Components/Images/virus.png","Components/Images/about2.png","Components/Images/loader.svg","Hello.js","Components/Confirmedchart.js","Components/Statecard.js","Components/MapChart.js","Components/Dashboard.js","Components/Header.js","Redux/ActionCreator.js","Redux/ActionTypes.js","Components/StateMapChart.js","Components/Districtwise.js","TopoJSON/StateWiseTopoJson.js","Components/Testcard.js","Components/Testdata.js","Components/About.js","Components/Home.js","App.js","serviceWorker.js","Redux/reducers.js","index.js"],"names":["module","exports","Component","Confirmedchart","props","console","log","chartData","zeros","colors","width","stacked","legend","label","curve","data","chatConfirmData","connect","state","stateData","className","title","isNaN","percentage","State","Confirmed","Active","Recovered","Deaths","totalCases","setTotalCases","dispatch","useState","confirmed","active","recovered","deaths","selectedMapDetail","setselectedMapDetail","maxArr","map","el","parseInt","maxLimit","Math","max","colorScale","scaleLinear","domain","range","setData","useEffect","csv","then","counties","geographyStyle","default","outline","cursor","hover","fill","transition","pressed","projection","projectionConfig","scale","center","geography","geographies","geo","cur","find","s","properties","st_nm","key","rsmKey","style","stroke","strokeWidth","onClick","onMouseLeave","Chartkick","options","Dashboard","this","length","element","color","chartRecoveredData","chartDeadData","direction","newsUpdate","reverse","margin","timeHour","update","src","cough","alt","href","Header","setDashboardActive","setState","setDistrictwiseActive","setTestDataActive","setAboutActive","setHomeActive","to","covidIcon","background","setStateTestData","payload","type","setTodayNews","loading","fetchStateWiseSuccess","mapData","fetchStateWiseFail","setConfirmChartData","setDeadChartData","setRecoveredChartData","fun","a","fetch","result","json","res","newsFun","districtwise","states_daily","states_district","states_tested_data","setDistrictWiseData","setStateDistrictData","setStateTotalData","setStateCode","setStateDailyConfirmed","setStateDailyDead","setStateMapData","selectedStateCode","selectedStateMapData","stateDistricts","StateMapData","StateCenter","setStateCenter","stateSelected","statecode","toUpperCase","districtData","geoUrl","topo","scaleZoom","district","deceased","Districtwise","selectStateHandle","e","selectedState","target","value","searchClick","fetchDistrictWise","name","id","onChange","placeholder","selectedStateTotal","Object","keys","districtWiseData","dailyConfirmed","dailyDead","stateName","getState","forEach","toLowerCase","setTimeout","dataConf","dataDead","index","status","date","Testcard","totalTests","negative","positive","notConfirmed","source","Testdata","testData","totaltested","unconfirmed","About","about","Home","virus","App","fetchStateWise","loader","exact","path","component","React","resp","arr","statewise","confirmData","deadData","recoverData","cases_time_series","totalconfirmed","totaldeceased","totalrecovered","DataArray","push","catch","err","Arr","Date","timestamp","toDateString","getHours","getDate","getMonth","getFullYear","updatedon","Boolean","window","location","hostname","match","INITIAL_STATE","store","createStore","action","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5cae8653.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coughing__monochromatic.f1f96e75.svg\";","module.exports = __webpack_public_path__ + \"static/media/virus.a2f06c08.png\";","module.exports = __webpack_public_path__ + \"static/media/about2.be1cc8c6.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.ddcede2e.svg\";","import React, { Component } from 'react'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";  \nclass Hello extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                 \n        }\n    }\ncomponentDidMount(){\n\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    chart.paddingRight = 20;\n\n    let data = [];\n    let visits = 10;\n    for (let i = 1; i < 366; i++) {\n        visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n        data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\n    }\n\n    chart.data = data;\n\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n\n    series.tooltipText = \"{valueY.value}\";\n    chart.cursor = new am4charts.XYCursor();\n\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    chart.scrollbarX = scrollbarX;\n\n    this.chart = chart;\n\n}\n    componentWillUnmount() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n\n            </div>\n        )\n    }\n}\n\nexport default Hello\n","import React from 'react';\r\nimport Chartkick, { LineChart } from 'react-chartkick';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Confirmedchart(props) {\r\n\r\n\r\nconsole.log(props.chartData);\r\n    return (\r\n      <LineChart\r\n    \r\n        zeros={false}\r\n        colors={[\"#b8b8b8\"]}\r\n        width={\"100%\"}\r\n        // xtitle={props.xtitle||\"Date\"} ytitle={props.ytitle||\"No. of cases\"}\r\n        stacked={false}\r\n        legend={true}\r\n        label={props.label}\r\n        curve={true}\r\n        data={props.chatConfirmData}\r\n      />\r\n    );\r\n}\r\n\r\n\r\nexport default Confirmedchart;\r\n// export default Activechart;\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Statecard(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"state-data-card\">\r\n        <div className=\"recovery-ratio-cont\" title=\"Recovery Percent\">\r\n          <p className=\"recovery-percent\">\r\n            {isNaN(props.percentage) ? 0 : props.percentage}%\r\n          </p>\r\n        </div>\r\n        <div className=\"state-data\">\r\n          <p className=\"state-name\">{props.State}</p>\r\n          <p className=\"state-confirmed-recovered\">\r\n            <span>Confirmed {props.Confirmed}</span>\r\n            <span>Active {props.Active}</span>\r\n\r\n            <span>Recovered {props.Recovered}</span>\r\n            <span>Deaths {props.Deaths}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateData: state.stateData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Statecard);\r\n// export default Activechart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport {scaleLinear } from \"d3-scale\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst geoUrl =\r\n  // \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\r\n  \"https://www.covid19india.org/maps/india.json\";\r\n  // \"https://raw.githubusercontent.com/varunon9/india-choropleth-javascript/master/src/india.topo.json\";\r\n\r\nconst MapChart = (props) => {\r\n  const [selectedMapDetail, setselectedMapDetail] = useState({\r\n    state: \"Hover State\",\r\n    confirmed: 0,\r\n    active: 0,\r\n    recovered: 0,\r\n    deaths: 0,\r\n  });\r\n  const maxArr = props.stateData.map((el) => {\r\n    // console.log(\"parseInt(el.confirmed)\", parseInt(el.confirmed));\r\n    if (el.state !== \"Total\") {\r\n      return parseInt(el.confirmed);\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n  const maxLimit = Math.max(...maxArr);\r\n  // console.log(\"maxArr\");\r\n  const colorScale = scaleLinear()\r\n    .domain([0, maxLimit])\r\n    .range([\"#ffedea\", \"#782618\"]);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // https://www.bls.gov/lau/\r\n    csv(\"https://api.covid19india.org/csv/latest/state_wise.csv\").then(\r\n      (counties) => {\r\n        setData(counties);\r\n        // console.log(\"object\",counties);\r\n      }\r\n    );\r\n  }, []);\r\n  const geographyStyle = {\r\n    default: {\r\n      outline: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n    hover: {\r\n      fill: \"#c9cc\",\r\n      transition: \"all 400ms\",\r\n      outline: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n    pressed: {\r\n      outline: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ComposableMap\r\n        projection=\"geoMercator\"\r\n        projectionConfig={{\r\n          scale: 1000,\r\n          center: [78.9629, 22.5937],\r\n        }}\r\n      >\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              \r\n              const cur = data.find((s) => {\r\n                // console.log(\"s geo india\",s,geo);\r\n                return s.State === geo.properties.st_nm;\r\n              });\r\n              // console.log(\r\n              //   \"cur\",\r\n              //   cur\r\n              //     /? \"conf in \" +\r\n              //         parseInt(cur.Confirmed) +\r\n              //         \"conf  \" +\r\n              //         cur.Confirmed\r\n              //     : null\r\n              // );\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={cur ? colorScale(parseInt(cur.Confirmed)) : \"#ffff\"}\r\n                  style={geographyStyle}\r\n                  stroke=\"#6d6d6d\"\r\n                  strokeWidth={0.2}\r\n                  onClick={() => {\r\n                    if (cur) {\r\n                      setselectedMapDetail({\r\n                        state: cur.State,\r\n                        confirmed: cur.Confirmed,\r\n                        active: cur.Active,\r\n                        recovered: cur.Recovered,\r\n                        deaths: cur.Deaths,\r\n                      });\r\n                    }\r\n                    // console.log(\"selectedMapDetail\", selectedMapDetail);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    if (cur) {\r\n                      setselectedMapDetail({});\r\n                    }\r\n                    // console.log(\"selectedMapDetail\", selectedMapDetail);\r\n                  }}\r\n                ></Geography>\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n      <div className=\"map-scale\"></div>\r\n      {selectedMapDetail.confirmed ? (\r\n        <div className=\"selected-map-details\">\r\n          <p className=\"selected-map-title\">\r\n            <span>{selectedMapDetail.state}</span>\r\n          </p>\r\n          <p>\r\n            <span> Confirmed </span> <span>{selectedMapDetail.confirmed}</span>\r\n          </p>{\" \"}\r\n          <p>\r\n            <span> Active </span> <span>{selectedMapDetail.active}</span>\r\n          </p>\r\n          <p>\r\n            <span> Recovered </span> <span>{selectedMapDetail.recovered}</span>\r\n          </p>\r\n          <p>\r\n            <span> Deaths </span> <span>{selectedMapDetail.deaths}</span>\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    totalCases: state.setTotalCases,\r\n    stateData: state.stateData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchStateWise: () => dispatch(fetchStateWise()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapChart);\r\n// export default MapChart;\r\n","import React, { Component } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport Chartkick from \"react-chartkick\";\r\nimport \"chart.js\";\r\nimport Confirmedchart from \"./Confirmedchart\";\r\nimport Statecard from \"./Statecard\";\r\nimport cough from \"./Images/coughing__monochromatic.svg\";\r\nimport MapChart from \"./MapChart\";\r\nimport { connect } from \"react-redux\";\r\nChartkick.options = {\r\n  colors: [\"#b00\", \"#666\"],\r\n};\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashContainer\">\r\n        <div className=\"dash-material-container\">\r\n          <div className=\"dash-left-container\">\r\n            <div className=\"total-container\">\r\n              <div className=\"total-cases-card\">\r\n                <div className=\"total-cases-detail\">\r\n                  <p className=\"total-case-text\">Active Cases</p>\r\n                  <p className=\"total-case-number\">\r\n                    {this.props.totalCases.active || \"Loading...\"}\r\n                  </p>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"total-cases-card\">\r\n                <div className=\"total-cases-detail\">\r\n                  <p className=\"total-case-text\">Confirmed Cases</p>\r\n                  <p className=\"total-case-number\">\r\n                    {this.props.totalCases.confirmed || \"Loading...\"}\r\n                  </p>\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"total-cases-card\">\r\n                <div className=\"total-cases-detail\">\r\n                  <p className=\"total-case-text\">Recovered</p>\r\n                  <p className=\"total-case-number\">\r\n                    {this.props.totalCases.recovered || \"Loading...\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"total-cases-card\">\r\n                <div className=\"total-cases-detail\">\r\n                  <p className=\"total-case-text\">Deaths</p>\r\n                  <p className=\"total-case-number\">\r\n                    {this.props.totalCases.deaths || \"Loading...\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"map-and-details-container\">\r\n              <div className=\"map\">\r\n                {/* <IndiaMap /> */}\r\n                <div className=\"map-chart\">\r\n                  <MapChart />\r\n                </div>\r\n              </div>\r\n              <div className=\"map-state-district-container\">\r\n                <p className=\"map-state-district-container-title map-title-outer\">\r\n                  States\r\n                </p>\r\n                <div className=\"state-data-card-container\">\r\n                  {this.props.stateData.length !== 0\r\n                    ? this.props.stateData.map((element) => {\r\n                        return (\r\n                          <Statecard\r\n                            percentage={parseInt(\r\n                              (element.recovered * 100) / element.confirmed\r\n                            )}\r\n                            Confirmed={element.confirmed}\r\n                            Active={element.active}\r\n                            Recovered={element.recovered}\r\n                            Deaths={element.deaths}\r\n                            State={element.state}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"awareness-container\">\r\n              <div className=\"aw-card\">\r\n                <div className=\"total-case-chart\">\r\n                  <Confirmedchart\r\n                    label=\"Confirmed Cases\"\r\n                    color=\"#d48c06\"\r\n                    chatConfirmData={this.props.chatConfirmData}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"aw-card\">\r\n                <div className=\"total-case-chart\">\r\n                  <Confirmedchart\r\n                    label=\"Recovered Cases\"\r\n                    color=\"#25ad11\"\r\n                    chatConfirmData={this.props.chartRecoveredData}\r\n                  />\r\n                </div>\r\n              </div>{\" \"}\r\n              <div className=\"aw-card\">\r\n                <div className=\"total-case-chart\">\r\n                  <Confirmedchart\r\n                    label=\"Death Cases\"\r\n                    color=\"#d11111\"\r\n                    chatConfirmData={this.props.chartDeadData}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"dash-right-container\">\r\n            <div className=\"aw-card-news\">\r\n              <div className=\"aw-card-title\">\r\n                <p className=\"news-and-updates-t\">NEWS & UPDATES</p>\r\n              </div>\r\n\r\n              <div className=\"news-card-cont\" direction=\"up\">\r\n                {this.props.newsUpdate.length !== 0\r\n                  ? this.props.newsUpdate.reverse().map((element) => {\r\n                      return (\r\n                        <div className=\"news-card\">\r\n                          <p\r\n                            style={{\r\n                              margin: \"2% 0%\",\r\n                              color: \"gray\",\r\n                            }}\r\n                          >\r\n                            About {element.timeHour} hour ago\r\n                          </p>\r\n                          <p>{element.update}</p>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : \"Loading....\"}\r\n              </div>\r\n            </div>\r\n            <div className=\"awareness-card-who\">\r\n              <img src={cough} className=\"who-aware-img\" alt=\"\" />\r\n              <div className=\"who-instructions-cont\">\r\n                <p className=\" aw-card-title who-inst-title\">\r\n                  Preventions and Symptoms\r\n                </p>\r\n                <p className=\"hero-who-text\">\r\n                  Protect yourself and others around you by knowing the facts\r\n                  and taking appropriate precautions.\r\n                </p>\r\n                <p className=\"read-more-text\">\r\n                  <a href=\"#\"> Read More... </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    totalCases: state.setTotalCases,\r\n    stateData: state.stateData,\r\n    newsUpdate: state.newsUpdate,\r\n    chatConfirmData: state.chatConfirmData,\r\n    chartRecoveredData: state.chartRecoveredData,\r\n    chartDeadData: state.chartDeadData,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // fetchStateWise: () => dispatch(fetchStateWise()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React, { Component, Fragment } from 'react'\r\nimport { TiThListOutline } from \"react-icons/ti\";\r\nimport covidIcon from \"./Images/virus.png\";\r\nimport { Link } from 'react-router-dom';\r\nimport { MdViewList } from \"react-icons/md\";\r\nimport { GiDrippingTube } from \"react-icons/gi\";\r\nimport { FiInfo } from \"react-icons/fi\";\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      active: \"\",\r\n    };\r\n  }\r\n  setDashboardActive = () => {\r\n    this.setState({\r\n      active: \"dashboard\",\r\n    });\r\n  };\r\n  setDistrictwiseActive = () => {\r\n    this.setState({\r\n      active: \"districtwise\",\r\n    });\r\n  };\r\n  setTestDataActive = () => {\r\n    this.setState({\r\n      active: \"testdata\",\r\n    });\r\n  };\r\n  setAboutActive = () => {\r\n    this.setState({\r\n      active: \"about\",\r\n    });\r\n  };\r\n  setHomeActive=()=>{\r\n    this.setState({\r\n      active: \"\",\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"dash-menu-container\">\r\n          <Link\r\n            to={\"/\"}\r\n            className=\"menu-item-covid\"\r\n            onClick={this.setHomeActive}\r\n          >\r\n            {/* < className=\"covid-icon\" /> */}\r\n            <img className=\"covid-icon\" src={covidIcon} alt=\"covid\" />\r\n            <p className=\"logo-name\">COVID-19</p>\r\n          </Link>\r\n          <div className=\"menu-right-cont\">\r\n            {/* <div className=\"menu-item\"> */}\r\n            <Link\r\n              onClick={this.setDashboardActive}\r\n              className=\"menu-item\"\r\n              // style={active}\r\n              style={\r\n                this.state.active === \"dashboard\"\r\n                  ? { background: \"#f5f3f2\" }\r\n                  : {}\r\n              }\r\n              to={\"/dashboard\"}\r\n            >\r\n              <TiThListOutline className=\"menu-icon\" /> <span>Dashboard</span>\r\n            </Link>\r\n            {/* </div> */}\r\n            <Link\r\n              className=\"menu-item\"\r\n              style={\r\n                this.state.active === \"districtwise\"\r\n                  ? { background: \"#f5f3f2\" }\r\n                  : {}\r\n              }\r\n              onClick={this.setDistrictwiseActive}\r\n              to={\"/districtwise\"}\r\n            >\r\n              <MdViewList className=\"menu-icon\" /> <span>Districtwise</span>\r\n            </Link>\r\n            <Link\r\n              className=\"menu-item\"\r\n              style={\r\n                this.state.active === \"testdata\"\r\n                  ? { background: \"#f5f3f2\" }\r\n                  : {}\r\n              }\r\n              onClick={this.setTestDataActive}\r\n              to={\"/testdata\"}\r\n            >\r\n              <GiDrippingTube className=\"menu-icon\" /> <span>Test-Data</span>\r\n            </Link>\r\n            <Link\r\n              className=\"menu-item\"\r\n              style={\r\n                this.state.active === \"about\" ? { background: \"#f5f3f2\" } : {}\r\n              }\r\n              onClick={this.setAboutActive}\r\n              to={\"/about\"}\r\n            >\r\n              <FiInfo className=\"menu-icon\" /> <span>About</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import {\n  LOADING,\n  FETCH_STATE_WISE_SUCCESS,\n  FETCH_STATE_WISE_FAIL,\n  SET_TOTAL_CASES,\n  SET_CHART_DATA,\n  SET_CONFIRM_CHART_DATA,\n  SET_TODAY_NEWS,\n  SET_DISTRICT_WISE,\n  SET_STATE_TOTAL,\n  SET_STATE_CODE,\n  SET_STATE_DAILY_CONFIRMED,\n  SET_STATE_DAILY_DEAD,\n  SET_DEAD_CHART_DATA,\n  SET_RECOVERED_CHART_DATA,\n  SET_TEST_DATA,\n  SET_STATE_MAP_DATA,\n  SET_STATE_DISTRICT_DATA,\n} from \"./ActionTypes\";\nimport { MH_TOPO, MP_TOPO, UP_TOPO, TN_TOPO, RJ_TOPO, DL_TOPO, GJ_TOPO, AP_TOPO, JK_TOPO, WB_TOPO, CH_TOPO, KA_TOPO, KL_TOPO, BR_TOPO, PB_TOPO, HR_TOPO, OR_TOPO, JH_TOPO, UT_TOPO, HP_TOPO, AS_TOPO, CT_TOPO, AN_TOPO, LA_TOPO, ML_TOPO, PY_TOPO, GA_TOPO, MN_TOPO, TR_TOPO, MZ_TOPO, AR_TOPO, NL_TOPO, DN_TOPO, DD_TOPO, LD_TOPO, SK_TOPO, TG_TOPO } from \"../TopoJSON/StateWiseTopoJson\";\n\nexport const fetchStateWise = () => {\n  return (dispatch) => {\n    fun()\n      .then((resp) => {\n        const arr = resp.statewise;\n\n        let confirmData = {},\n          deadData = {},\n          recoverData = {};\n        resp.cases_time_series.forEach((element) => {\n          confirmData[element.date + \"2020\"] = element.totalconfirmed;\n        });\n        resp.cases_time_series.forEach((element) => {\n          deadData[element.date + \"2020\"] = element.totaldeceased;\n        });\n        resp.cases_time_series.forEach((element) => {\n          recoverData[element.date + \"2020\"] = element.totalrecovered;\n        });\n\n        dispatch(setConfirmChartData(confirmData));\n        dispatch(setDeadChartData(deadData));\n        dispatch(setRecoveredChartData(recoverData));\n        // console.log(\"arr\", arr, resp);\n        let DataArray = [[\"State\", \"Active cases\"]];\n\n        for (let index = 0; index < arr.length; index++) {\n          const element = arr[index];\n          if (element.state !== \"Total\") {\n            // console.log(element.state);\n            DataArray.push([element.state, parseInt(element.active)]);\n          }\n          if (index === 0) {\n            dispatch(setTotalCases({ ...element }));\n          } else {\n            continue;\n          }\n        }\n        dispatch(fetchStateWiseSuccess(DataArray, arr));\n        setTimeout(() => {\n          dispatch(loading(false));\n        }, 2000);\n      })\n      .catch((err) => {\n        if (err) {\n          // console.log(err);\n          dispatch(fetchStateWiseFail());\n          // dispatch(loading(false))\n          setTimeout(() => {\n            dispatch(loading(false));\n          }, 2000);\n        }\n      });\n\n    newsFun()\n      .then((data) => {\n        let Arr = [];\n        data.forEach((element) => {\n          // console.log(\n          //   new Date().getHours() -\n          //     new Date(element.timestamp * 1000).getHours() <\n          //     6\n          // );\n          if (\n            new Date(element.timestamp * 1000).toDateString() ==\n              new Date().toDateString() &&\n            new Date().getHours() -\n              new Date(element.timestamp * 1000).getHours() <\n              6\n          ) {\n            Arr.push({\n              update: element.update,\n              timeHour:\n                new Date().getHours() -\n                new Date(element.timestamp * 1000).getHours(),\n            });\n          } else {\n            // console.log(\"object\");\n          }\n        });\n        dispatch(setTodayNews(Arr));\n        // console.log(\"data :\", Arr, data);\n      })\n      .catch((err) => console.log(err));\n    states_tested_data().then((res) => {\n      // console.log(res.states_tested_data);\n      let arr = [];\n      if (res.states_tested_data.length !== 0) {\n        for (let index = 0; index < res.states_tested_data.length; index++) {\n          const element = res.states_tested_data[index];\n          if (\n            new Date().getDate() -\n              1 +\n              \"/\" +\n              \"0\" +\n              (new Date().getMonth() + 1) +\n              \"/\" +\n              new Date().getFullYear() ==\n            element.updatedon\n          ) {\n            arr.push(element);\n          }\n        }\n        dispatch(setStateTestData(arr));\n      }\n    }).catch(err=>console.log(err))\n    states_district().then((res) => {\n      // console.log(\"statedistricts\", res);\n      dispatch(setStateDistrictData(res));\n    }).catch(err=>{\n      console.log(err);\n    })\n  };\n};\nconst setStateTestData = (payload) => {\n  return {\n    type: SET_TEST_DATA,\n    payload,\n  };\n};\nconst setTodayNews = (payload) => {\n  return {\n    type: SET_TODAY_NEWS,\n    payload,\n  };\n};\n\nconst loading = (payload) => {\n  return {\n    type: LOADING,\n    payload,\n  };\n};\nconst fetchStateWiseSuccess = (mapData, stateData) => {\n  return {\n    type: FETCH_STATE_WISE_SUCCESS,\n    mapData,\n    stateData,\n  };\n};\nconst fetchStateWiseFail = (payload) => {\n  return {\n    type: FETCH_STATE_WISE_FAIL,\n    payload,\n  };\n};\nconst setTotalCases = (payload) => {\n  return {\n    type: SET_TOTAL_CASES,\n    payload,\n  };\n};\nconst setChartData = (payload) => {\n  return {\n    type: SET_CHART_DATA,\n    payload,\n  };\n};\nconst setConfirmChartData = (payload) => {\n  return {\n    type: SET_CONFIRM_CHART_DATA,\n    payload,\n  };\n};\nconst setDeadChartData = (payload) => {\n  return {\n    type: SET_DEAD_CHART_DATA,\n    payload,\n  };\n};\nconst setRecoveredChartData = (payload) => {\n  return {\n    type: SET_RECOVERED_CHART_DATA,\n    payload,\n  };\n};\n\nconst fun = async () => {\n  const result = await fetch(\"https://api.covid19india.org/data.json\");\n  const res = await result.json();\n  return res;\n};\nconst newsFun = async () => {\n  const result = await fetch(\"https://api.covid19india.org/updatelog/log.json\");\n  const res = await result.json();\n  return res;\n};\nconst districtwise = async () => {\n  const result = await fetch(\n    \"https://api.covid19india.org/state_district_wise.json\"\n  );\n  const res = await result.json();\n  return res;\n};\nconst states_daily = async () => {\n  const result = await fetch(\"https://api.covid19india.org/states_daily.json\");\n  const res = await result.json();\n  return res;\n};\nconst states_district = async () => {\n  const result = await fetch(\n    \"https://api.covid19india.org/v2/state_district_wise.json\"\n  );\n  const res = await result.json();\n  return res;\n};\nconst states_tested_data = async () => {\n  const result = await fetch(\n    \"https://api.covid19india.org/state_test_data.json\"\n  );\n  const res = await result.json();\n  return res;\n};\nexport const fetchDistrictWise = (stateName) => {\n  return (dispatch, getState) => {\n    dispatch(loading(true));\n    districtwise().then((result) => {\n      if (result[stateName]) {\n        dispatch(setDistrictWiseData(result[stateName].districtData));\n        // console.log(getState()[\"stateData\"]);\n        getState()[\"stateData\"].forEach((element) => {\n          if (element.state === stateName) {\n            // console.log(element);\n            dispatch(setStateTotalData(element));\n            dispatch(setStateCode(element.statecode.toLowerCase()));\n            // dispatch(loading(false));\n            setTimeout(() => {\n              dispatch(loading(false));\n            }, 2000);\n          }\n        });\n      }\n      dispatch(loading(true));\n\n      states_daily().then((data) => {\n        let dataConf = {},\n          dataDead = {};\n        // console.log(data.states_daily);\n        if (data.states_daily.length !== 0) {\n          for (let index = 0; index < data.states_daily.length; index++) {\n            const element = data.states_daily[index];\n\n            if (element.status === \"Confirmed\") {\n              // console.log(\n              //   getState()[\"selectedStateCode\"],\n              //   element[getState()[\"selectedStateCode\"]]\n              // );\n              dataConf[element.date] = element[getState()[\"selectedStateCode\"]];\n              //   arrConf.push({\n              //     confirmed: element[getState()[\"selectedStateCode\"]],\n              //     date: element.date\n              //   });\n            }\n            if (element.status === \"Deceased\") {\n              dataDead[element.date] = element[getState()[\"selectedStateCode\"]];\n              // arrDead.push({\n              //   dead: element[getState()[\"selectedStateCode\"]],\n              //   date: element.date,\n              // });\n            }\n          }\n          dispatch(setStateDailyConfirmed(dataConf));\n          dispatch(setStateDailyDead(dataDead));\n\n          switch (getState()[\"selectedStateCode\"].toUpperCase()) {\n            case \"MH\":\n              dispatch(\n                setStateMapData({\n                  topo: MH_TOPO,\n                  center: [76.96504187, 19.01000633],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"MP\":\n              dispatch(\n                setStateMapData({\n                  topo: MP_TOPO,\n                  // center: [78.0629, 23.5937],\n                  center: [78.40204187, 23.50000633],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"GJ\":\n              dispatch(\n                setStateMapData({\n                  topo: GJ_TOPO,\n                  center: [71.96504187, 22.00000633],\n                  scaleZoom: 1.05,\n                })\n              );\n              break;\n            case \"DL\":\n              dispatch(\n                setStateMapData({\n                  topo: DL_TOPO,\n                  // center: [77.23000403, 28.6699929],\n                  center: [77.10504187, 28.695000633],\n                  scaleZoom: 10,\n                })\n              );\n              break;\n            case \"RJ\":\n              dispatch(\n                setStateMapData({\n                  topo: RJ_TOPO,\n                  // center: [74.63998124, 26.44999921],\n                  center: [74.63998124, 26.40000633],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"TN\":\n              dispatch(\n                setStateMapData({\n                  topo: TN_TOPO,\n                  // center: [79.15004187, 12.92038576],\n                  center: [79.15004187, 10.92038576],\n                  scaleZoom: 1.5,\n                })\n              );\n              break;\n            case \"UP\":\n              dispatch(\n                setStateMapData({\n                  topo: UP_TOPO,\n                  // center: [78.05000565, 27.59998069],\n                  center: [81.05000565, 27.09998069],\n                  scaleZoom: 1.1,\n                })\n              );\n              break;\n            case \"AP\":\n              dispatch(\n                setStateMapData({\n                  topo: AP_TOPO,\n                  // center: [78.57002559, 14.7504291],\n                  center: [80.73598262, 15.76702557],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"TG\":\n              dispatch(\n                setStateMapData({\n                  topo: TG_TOPO,\n                  center: [79.73598262, 17.76702557],\n                  scaleZoom: 1.7,\n                })\n              );\n              break;\n            case \"WB\":\n              dispatch(\n                setStateMapData({\n                  topo: WB_TOPO,\n                  // center: [88.32994665, 22.58039044],\n                  center: [88.32994665, 24.48039044],\n                  scaleZoom: 1.19,\n                })\n              );\n              break;\n            case \"JK\":\n              dispatch(\n                setStateMapData({\n                  topo: JK_TOPO,\n                  scaleZoom: 1.9,\n\n                  center: [75.46665849, 33.59995933],\n                })\n              );\n              break;\n            case \"KA\":\n              dispatch(\n                setStateMapData({\n                  topo: KA_TOPO,\n\n                  center: [76.91999711, 14.77038129],\n                  scaleZoom: 1.1,\n                  \n                })\n              );\n              break;\n            case \"KL\":\n              dispatch(\n                setStateMapData({\n                  topo: KL_TOPO,\n                  center: [76.91999711, 10.77038129],\n                  scaleZoom: 1.5,\n                })\n              );\n              break;\n            case \"BR\":\n              dispatch(\n                setStateMapData({\n                  topo: BR_TOPO,\n                  center: [86.0629, 25.35937],\n                  scaleZoom: 1.7,\n                })\n              );\n              break;\n            case \"PB\":\n              dispatch(\n                setStateMapData({\n                  topo: PB_TOPO,\n                  center: [76.0629, 30.71997398],\n                  scaleZoom: 1.9,\n                })\n              );\n              break;\n            case \"HR\":\n              dispatch(\n                setStateMapData({\n                  topo: HR_TOPO,\n                  center: [77.01999101, 28.99000633],\n                  scaleZoom: 1.9,\n                })\n              );\n              break;\n            case \"OR\":\n              dispatch(\n                setStateMapData({\n                  topo: OR_TOPO,\n                  center: [84.10001746, 19.82042971],\n                  scaleZoom: 1.3,\n                })\n              );\n              break;\n\n            case \"JH\":\n              dispatch(\n                setStateMapData({\n                  topo: JH_TOPO,\n                  center: [85.51998572, 23.80039349],\n                  scaleZoom: 1.7,\n                })\n              );\n              break;\n            case \"CH\":\n              dispatch(\n                setStateMapData({\n                  topo: CH_TOPO,\n                  center: [76.78000565, 30.71999697],\n                  scaleZoom: 15,\n                })\n              );\n              break;\n            case \"UT\":\n              dispatch(\n                setStateMapData({\n                  topo: UT_TOPO,\n                  center: [79.78000565, 29.71999697],\n                  scaleZoom: 1.7,\n                })\n              );\n              break;\n            case \"HP\":\n              dispatch(\n                setStateMapData({\n                  topo: HP_TOPO,\n                  center: [76.98000565, 31.10002545],\n                  scaleZoom: 1.5,\n                })\n              );\n              break;\n            case \"AS\":\n              dispatch(\n                setStateMapData({\n                  topo: AS_TOPO,\n                  center: [93.21666744, 25.7499809],\n                  scaleZoom: 1.5,\n                })\n              );\n              break;\n            case \"CT\":\n              dispatch(\n                setStateMapData({\n                  topo: CT_TOPO,\n                  center: [82.78000565, 20.71999697],\n                  scaleZoom: 1.1,\n                })\n              );\n              break;\n            case \"AN\":\n              dispatch(\n                setStateMapData({\n                  topo: AN_TOPO,\n                  center: [92.73598262, 9.66702557],\n                  scaleZoom: 1.1,\n                })\n              );\n              break;\n            case \"LA\":\n              dispatch(\n                setStateMapData({\n                  topo: LA_TOPO,\n                  center: [76.577049, 34.152588],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"ML\":\n              dispatch(\n                setStateMapData({\n                  topo: ML_TOPO,\n                  center: [91.8800142, 25.57049217],\n                  scaleZoom: 2.4,\n                })\n              );\n              break;\n            case \"PY\":\n              dispatch(\n                setStateMapData({\n                  topo: PY_TOPO,\n                  center: [79.80000037, 11.93499371],\n                  scaleZoom: 21,\n                })\n              );\n              break;\n            case \"GA\":\n              dispatch(\n                setStateMapData({\n                  topo: GA_TOPO,\n                  center: [74.11800065, 15.291997],\n                  scaleZoom: 8,\n                })\n              );\n              break;\n            case \"MN\":\n              dispatch(\n                setStateMapData({\n                  topo: MN_TOPO,\n                  center: [93.95001705, 24.79997072],\n                  scaleZoom: 2.4,\n                })\n              );\n              break;\n            case \"TR\":\n              dispatch(\n                setStateMapData({\n                  topo: TR_TOPO,\n                  center: [91.57999914, 23.83540428],\n                  scaleZoom: 3,\n                })\n              );\n              break;\n            case \"MZ\":\n              dispatch(\n                setStateMapData({\n                  topo: MZ_TOPO,\n                  center: [92.72001461, 23.01039899],\n                  scaleZoom: 2.4,\n                })\n              );\n              break;\n            case \"AR\":\n              dispatch(\n                setStateMapData({\n                  topo: AR_TOPO,\n                  center: [94.61660071, 27.50039878],\n                  scaleZoom: 1.8,\n                })\n              );\n              break;\n            case \"NL\":\n              dispatch(\n                setStateMapData({\n                  topo: NL_TOPO,\n                  center: [94.11657019, 25.6669979],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"DN\":\n              dispatch(\n                setStateMapData({\n                  topo: DN_TOPO,\n                  center: [78.0629, 23.5937],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"DD\":\n              dispatch(\n                setStateMapData({\n                  topo: DD_TOPO,\n                  center: [78.0629, 23.5937],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"LD\":\n              dispatch(\n                setStateMapData({\n                  topo: LD_TOPO,\n                  center: [78.0629, 23.5937],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            case \"SK\":\n              dispatch(\n                setStateMapData({\n                  topo: SK_TOPO,\n                  center: [88.6166475, 27.3333303],\n                  scaleZoom: 1,\n                })\n              );\n              break;\n            default:\n              break;\n          }\n\n          // dispatch(loading(false));\n          setTimeout(() => {\n            dispatch(loading(false));\n          }, 2000);\n        }\n      });\n      // console.log(result[stateName]);\n    });\n  };\n};\nconst setDistrictWiseData = (payload) => {\n  return {\n    type: SET_DISTRICT_WISE,\n    payload,\n  };\n};\nconst setStateDistrictData = (payload) => {\n  return {\n    type: SET_STATE_DISTRICT_DATA,\n    payload,\n  };\n};\nconst setStateTotalData = (payload) => {\n  return {\n    type: SET_STATE_TOTAL,\n    payload,\n  };\n};\nconst setStateCode = (payload) => {\n  return {\n    type: SET_STATE_CODE,\n    payload,\n  };\n};\nconst setStateDailyConfirmed = (payload) => {\n  return {\n    type: SET_STATE_DAILY_CONFIRMED,\n    payload,\n  };\n};\nconst setStateDailyDead = (payload) => {\n  return {\n    type: SET_STATE_DAILY_DEAD,\n    payload,\n  };\n};\nconst setStateMapData = (payload) => {\n  return {\n    type: SET_STATE_MAP_DATA,\n    payload,\n  };\n};\n","export const FETCH_STATE_WISE_SUCCESS = \"FETCH_STATE_WISE_SUCCESS\"\nexport const FETCH_STATE_WISE_FAIL = \"FETCH_STATE_WISE_FAIL\"\nexport const SET_TOTAL_CASES = \"SET_TOTAL_CASES\"\nexport const LOADING = \"LOADING\"\nexport const SET_CHART_DATA =\"SET_CHART_DATA\"\nexport const SET_CONFIRM_CHART_DATA = \"SET_CONFIRM_CHART_DATA\"\nexport const SET_DEAD_CHART_DATA = \"SET_DEAD_CHART_DATA\";\nexport const SET_RECOVERED_CHART_DATA = \"SET_RECOVERED_CHART_DATA\";\nexport const SET_TODAY_NEWS = \"SET_TODAY_NEWS\"\nexport const SET_DISTRICT_WISE = \"SET_DISTRICT_WISE\";\nexport const SET_STATE_TOTAL = \"SET_STATE_TOTAL\";\nexport const SET_STATE_CODE = \"SET_STATE_CODE\";\nexport const SET_STATE_DAILY_CONFIRMED = \"SET_STATE_DAILY_CONFIRMED\";\nexport const SET_STATE_DAILY_DEAD = \"SET_STATE_DAILY_DEAD\";\nexport const SET_TEST_DATA = \"SET_TEST_DATA\";\nexport const SET_STATE_MAP_DATA = \"SET_STATE_MAP_DATA\";\nexport const SET_STATE_DISTRICT_DATA = \"SET_STATE_DISTRICT_DATA\";\n","import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport {scaleLinear } from \"d3-scale\";\nimport \"./statemap.css\"\nimport { connect } from \"react-redux\";\n\n\n\nconst StateMapChart = (props) => {\n   \n  const [selectedMapDetail, setselectedMapDetail] = useState({\n    state: \"\",\n    confirmed: 0,\n    active: 0,\n    recovered: 0,\n    deaths: 0,\n  });\n  // const maxArr = props.stateData.map((el) => {\n  //   // console.log(\"parseInt(el.confirmed)\", parseInt(el.confirmed));\n  //   if (el.state !== \"Total\") {\n  //     return parseInt(el.confirmed);\n  //   } else {\n  //     return 0;\n  //   }\n  // });\n  // const maxLimit = Math.max(...maxArr);\n  // console.log(\"maxArr\");\n  const colorScale = scaleLinear()\n    .domain([0, 500])\n    .range([\"#f7f7f7\", \"#782618\"]);\n\n  const [data, setData] = useState([]);\n  // const [content, setContent] = useState(\"\");\nconst [selectedStateCode, setselectedStateCode] = useState(\n  props.selectedStateCode\n);\nconst [StateMapData, setStateMapData] = useState(\n {}\n);\nconst [zoomLevel, setzoomLevel] = useState(1)\nconst [StateCenter, setStateCenter] = useState([78.9629, 22.5937]);\n// console.log(\"StateMapData\", StateMapData);\n\n  \n\nuseEffect(() => {\n  const stateSelected = props.stateDistricts.find((el) => {\n    return el.statecode === props.selectedStateCode.toUpperCase();\n  });\n  \n  if (stateSelected) {\n  setData(stateSelected.districtData);\n    \n  }\n  setStateMapData(props.selectedStateMapData);\n  setStateCenter(props.selectedStateMapData.center);\n  // console.log(\"props.selectedStateMapData\", props.selectedStateMapData);\n  // console.log(\"stateSelected.districtData\", stateSelected.districtData);\n}, [props.selectedStateCode, props.selectedStateMapData]);\nconst geoUrl =\n  StateMapData.topo || \"https://www.covid19india.org/maps/india.json\";\n       // https://www.bls.gov/lau/\n \n  \n  // if (props.selectedStateMapData) {\n  //   console.log(\"object\", props.selectedStateMapData);\n  //  setStateMapData(props.selectedStateMapData);\n  // }\n  \n\n  const geographyStyle = {\n    default: {\n      outline: \"none\",\n      cursor: \"pointer\",\n    },\n    hover: {\n      fill: \"#c9cc\",\n      transition: \"all 400ms\",\n      outline: \"none\",\n      cursor: \"pointer\",\n    },\n    pressed: {\n      outline: \"none\",\n      cursor: \"pointer\",\n    },\n  };\n\n\n  return (\n    <>\n\n      <ComposableMap\n        projection=\"geoMercator\"\n        projectionConfig={{\n          scale: 4000 * StateMapData.scaleZoom||1,\n          center: StateCenter,\n        }}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const cur = data.find((s) => {\n                // console.log(\"s, geo.district\", s, geo);\n                // return s[\"districtData\"][0].district === geo.properties.district});\n                return s.district === geo.properties.district;\n              });\n              // console.log(\"cur\", cur, cur ? typeof cur.confirmed : \"not\");\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={cur ? colorScale(parseInt(cur.confirmed)) : \"#ffff\"}\n                  style={geographyStyle}\n                  // title=\"Hello\"\n                  stroke=\"#6d6d6d\"\n                  strokeWidth={0.5}\n                  onClick={() => {\n                    if (cur) {\n                      // console.log(cur);\n                      setselectedMapDetail({\n                        state: cur.district,\n                        confirmed: cur.confirmed,\n                        active: cur.active,\n                        recovered: cur.recovered,\n                        deaths: cur.deceased,\n                      });\n                    }\n                    // console.log(\"selectedMapDetail\", selectedMapDetail);\n                  }}\n                  onMouseLeave={() => {\n                    if (cur) {\n                      setselectedMapDetail({});\n                    }\n                    // console.log(\"selectedMapDetail\", selectedMapDetail);\n                  }}\n                ></Geography>\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n      <div className=\"map-scale\"></div>\n      {selectedMapDetail.state ? (\n        <div className=\"selected-State-map-details\">\n          <p className=\"selected-map-title\">\n            <span>{selectedMapDetail.state}</span>\n          </p>\n          <p>\n            <span> Confirmed </span> <span>{selectedMapDetail.confirmed}</span>\n          </p>{\" \"}\n          <p>\n            <span> Active </span> <span>{selectedMapDetail.active}</span>\n          </p>\n          <p>\n            <span> Recovered </span> <span>{selectedMapDetail.recovered}</span>\n          </p>\n          <p>\n            <span> Deaths </span> <span>{selectedMapDetail.deaths}</span>\n          </p>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    totalCases: state.setTotalCases,\n    stateData: state.stateData,\n    selectedStateCode: state.selectedStateCode,\n    selectedStateMapData: state.selectedStateMapData,\n    stateDistricts: state.stateDistricts,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // fetchStateWise: () => dispatch(fetchStateWise()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(StateMapChart);\n// export default MapChart;\n","import React, { Component, Fragment } from \"react\";\nimport \"./dashboard.css\";\nimport Chartkick from \"react-chartkick\";\nimport \"chart.js\";\nimport { connect } from \"react-redux\";\nimport { fetchDistrictWise } from \"../Redux/ActionCreator\";\nimport Confirmedchart from \"./Confirmedchart\";\nimport Statecard from \"./Statecard\";\nimport cough from \"./Images/coughing__monochromatic.svg\";\nimport MapChart from \"./MapChart\";\nimport StateMapChart from \"./StateMapChart\";\nChartkick.options = {\n  colors: [\"#b00\", \"#666\"],\n\n};\nclass Districtwise extends Component {\n  constructor(props) {\n    \n    super(props);\n// console.log(\"district\");\n    this.state = {\n      selectedState: \"Total\",\n    };\n  }\n\n  selectStateHandle = (e) => {\n    // console.log(e.target.value);\n    this.setState({\n      selectedState: e.target.value,\n    });\n  };\n  searchClick = () => {\n    if (this.state.selectedState !== \"Total\") {\n      this.props.fetchDistrictWise(this.state.selectedState);\n    }\n  };\n  render() {\n    return (\n      <div className=\"dashContainer\">\n        <div className=\"search-state\">\n          <select\n            name=\"Selected State\"\n            id=\"select-state\"\n            onChange={this.selectStateHandle}\n            placeholder=\"Select State\"\n          >\n            <option value=\"Total\">Select State</option>\n            {this.props.stateData.length !== 0\n              ? this.props.stateData.map((element) => {\n                  if (element.state !== \"Total\") {\n                    return (\n                      <option value={element.state}>{element.state}</option>\n                    );\n                  }\n                })\n              : null}\n          </select>\n          <div className=\"search-btn-cont\">\n            <button className=\"searchDistrict-btn\" onClick={this.searchClick}>\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"dash-material-container\">\n          <div className=\"dash-left-container\">\n            <div className=\"total-container\">\n              <div className=\"total-cases-card\">\n                <div className=\"total-cases-detail\">\n                  <p className=\"total-case-text\">Active Cases</p>\n                  <p className=\"total-case-number\">\n                    {this.props.selectedStateTotal.active\n                      ? this.props.selectedStateTotal.active\n                      : this.props.totalCases.active || \"Loading...\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"total-cases-card\">\n                <div className=\"total-cases-detail\">\n                  <p className=\"total-case-text\">Confirmed Cases</p>\n                  <p className=\"total-case-number\">\n                    {this.props.selectedStateTotal.confirmed\n                      ? this.props.selectedStateTotal.confirmed\n                      : this.props.totalCases.confirmed || \"Loading...\"}\n                  </p>\n                </div>\n              </div>{\" \"}\n              <div className=\"total-cases-card\">\n                <div className=\"total-cases-detail\">\n                  <p className=\"total-case-text\">Recovered</p>\n                  <p className=\"total-case-number\">\n                    {this.props.selectedStateTotal.recovered\n                      ? this.props.selectedStateTotal.recovered\n                      : this.props.totalCases.recovered || \"Loading...\"}\n                  </p>\n                </div>\n              </div>\n              <div className=\"total-cases-card\">\n                <div className=\"total-cases-detail\">\n                  <p className=\"total-case-text\">Deaths</p>\n                  <p className=\"total-case-number\">\n                    {this.props.selectedStateTotal.deaths\n                      ? this.props.selectedStateTotal.deaths\n                      : this.props.totalCases.deaths || \"Loading...\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"map-and-details-container\">\n              <div className=\"map\">\n                <div className=\"map-chart\">\n                  {this.props.selectedStateCode ? (\n                    <StateMapChart />\n                  ) : (\n                    <MapChart />\n                  )}\n                </div>{\" \"}\n              </div>\n              <div className=\"map-state-district-container\">\n                <p className=\"map-state-district-container-title map-title-outer\">\n                  {this.props.selectedStateTotal.recovered\n                    ? \"Districts\"\n                    : \"States\" || \"Loading...\"}\n                </p>\n                <div className=\"state-data-card-container\">\n                  {Object.keys(this.props.districtWiseData).length !== 0\n                    ? Object.keys(this.props.districtWiseData).map(\n                        (element) => {\n                          return (\n                            <Statecard\n                              percentage={parseInt(\n                                (this.props.districtWiseData[element]\n                                  .recovered *\n                                  100) /\n                                  this.props.districtWiseData[element].confirmed\n                              )}\n                              Confirmed={\n                                this.props.districtWiseData[element].confirmed\n                              }\n                              Active={\n                                this.props.districtWiseData[element].active\n                              }\n                              Recovered={\n                                this.props.districtWiseData[element].recovered\n                              }\n                              Deaths={\n                                this.props.districtWiseData[element].deceased\n                              }\n                              State={element}\n                            />\n                          );\n                        }\n                      )\n                    : this.props.stateData.length !== 0\n                    ? this.props.stateData.map((element) => {\n                        return (\n                          <Statecard\n                            percentage={parseInt(\n                              (element.recovered * 100) / element.confirmed\n                            )}\n                            Confirmed={element.confirmed}\n                            Active={element.active}\n                            Recovered={element.recovered}\n                            Deaths={element.deaths}\n                            State={element.state}\n                          />\n                        );\n                      })\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"awareness-container\">\n              {this.props.selectedStateTotal.recovered ? (\n                <Fragment>\n                  {\" \"}\n                  <div className=\"aw-card\">\n                    <div className=\"total-case-chart\">\n                      <Confirmedchart\n                        label=\"Confirmed Cases\"\n                        color=\"#d48c06\"\n                        chatConfirmData={this.props.dailyConfirmed}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"aw-card\">\n                    <div className=\"total-case-chart\">\n                      <Confirmedchart\n                        label=\"Death Cases\"\n                        color=\"#d11111\"\n                        chatConfirmData={this.props.dailyDead}\n                      />\n                    </div>\n                  </div>\n                </Fragment>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"dash-right-container\">\n            <div className=\"aw-card-news\">\n              <div className=\"aw-card-title\">\n                <p className=\"news-and-updates-t\">NEWS & UPDATES</p>\n              </div>\n\n              <div className=\"news-card-cont\" direction=\"up\">\n                {this.props.newsUpdate.length !== 0\n                  ? this.props.newsUpdate.reverse().map((element) => {\n                      return (\n                        <div className=\"news-card\">\n                          <p\n                            style={{\n                              margin: \"2% 0%\",\n                              color: \"gray\",\n                            }}\n                          >\n                            About {element.timeHour} hour ago\n                          </p>\n                          <p>{element.update}</p>\n                        </div>\n                      );\n                    })\n                  : \"Loading....\"}\n              </div>\n            </div>\n            <div className=\"awareness-card-who\">\n              <img src={cough} className=\"who-aware-img\" alt=\"\" />\n              <div className=\"who-instructions-cont\">\n                <p className=\" aw-card-title who-inst-title\">\n                  Preventions and Symptoms\n                </p>\n                <p className=\"hero-who-text\">\n                  Protect yourself and others around you by knowing the facts\n                  and taking appropriate precautions.\n                </p>\n                <p className=\"read-more-text\">\n                  <a href=\"#\"> Read More... </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    totalCases: state.setTotalCases,\n    stateData: state.stateData,\n    newsUpdate: state.newsUpdate,\n    selectedStateTotal: state.selectedStateTotal,\n    districtWiseData: state.districtWiseData,\n    dailyConfirmed: state.dailyConfirmed,\n    dailyDead: state.dailyDead,\n    selectedStateCode:state.selectedStateCode\n    \n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchDistrictWise: (stateName) => dispatch(fetchDistrictWise(stateName)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Districtwise);\n","export const MH_TOPO = \"https://www.covid19india.org/maps/maharashtra.json\";\nexport const GJ_TOPO = \"https://www.covid19india.org/maps/gujarat.json\";\nexport const DL_TOPO = \"https://www.covid19india.org/maps/delhi.json\";\nexport const MP_TOPO = \"https://www.covid19india.org/maps/madhyapradesh.json\";\nexport const RJ_TOPO = \"https://www.covid19india.org/maps/rajasthan.json\";\nexport const TN_TOPO = \"https://www.covid19india.org/maps/tamilnadu.json\";\nexport const UP_TOPO = \"https://www.covid19india.org/maps/uttarpradesh.json\";\nexport const AP_TOPO = \"https://www.covid19india.org/maps/andhrapradesh.json\";\nexport const TG_TOPO = \"https://www.covid19india.org/maps/telangana.json\";\nexport const WB_TOPO = \"https://www.covid19india.org/maps/westbengal.json\";\nexport const JK_TOPO = \"https://www.covid19india.org/maps/jammukashmir.json\";\nexport const KA_TOPO = \"https://www.covid19india.org/maps/karnataka.json\";\nexport const KL_TOPO = \"https://www.covid19india.org/maps/kerala.json\";\nexport const BR_TOPO = \"https://www.covid19india.org/maps/bihar.json\";\nexport const PB_TOPO = \"https://www.covid19india.org/maps/punjab.json\";\nexport const HR_TOPO = \"https://www.covid19india.org/maps/haryana.json\";\nexport const OR_TOPO = \"https://www.covid19india.org/maps/odisha.json\";\nexport const JH_TOPO = \"https://www.covid19india.org/maps/jharkhand.json\";\nexport const CH_TOPO = \"https://www.covid19india.org/maps/chandigarh.json\";\nexport const UT_TOPO = \"https://www.covid19india.org/maps/uttarakhand.json\";\nexport const HP_TOPO = \"https://www.covid19india.org/maps/himachalpradesh.json\";\nexport const AS_TOPO = \"https://www.covid19india.org/maps/assam.json\";\nexport const CT_TOPO = \"https://www.covid19india.org/maps/chhattisgarh.json\";\nexport const AN_TOPO =\n         \"https://www.covid19india.org/maps/andamannicobarislands.json\";\nexport const LA_TOPO = \"https://www.covid19india.org/maps/ladakh.json\";\nexport const ML_TOPO = \"https://www.covid19india.org/maps/meghalaya.json\";\nexport const PY_TOPO = \"https://www.covid19india.org/maps/puducherry.json\";\nexport const GA_TOPO = \"https://www.covid19india.org/maps/goa.json\";\nexport const MN_TOPO = \"https://www.covid19india.org/maps/manipur.json\";\nexport const TR_TOPO = \"https://www.covid19india.org/maps/tripura.json\";\nexport const MZ_TOPO = \"https://www.covid19india.org/maps/mizoram.json\";\nexport const AR_TOPO =\n         \"https://www.covid19india.org/maps/arunachalpradesh.json\";\nexport const NL_TOPO = \"https://www.covid19india.org/maps/nagaland.json\";\nexport const DN_TOPO = \"https://www.covid19india.org/maps/india.json\";\nexport const DD_TOPO = \"https://www.covid19india.org/maps/india.json\";\nexport const LD_TOPO = \"https://www.covid19india.org/maps/india.json\";\nexport const SK_TOPO = \"https://www.covid19india.org/maps/sikkim.json\";","import React from 'react';\n\nfunction Testcard(props) {\n    return (\n      <div className=\"test-data-card\">\n        <p className=\"test-data-title\">{props.stateName}</p>\n        <div className=\"test-data-detail\">\n          <p className=\"total-tests\">\n            <span>Total Tests</span> <span>{props.totalTests}</span>\n          </p>\n          <p className=\"test-positive\">\n            <span>Negative</span> <span>{props.negative}</span>\n          </p>\n          <p className=\"test-negative\">\n            <span>Positive</span> <span>{props.positive}</span>\n          </p>\n          <p className=\"test-not-confm\">\n            <span>Not Confirmed</span> <span>{props.notConfirmed}</span>\n          </p>\n          <p className=\"source\">\n            <span> Source </span>\n            <span>\n              <a href={props.source}>Here</a>\n            </span>\n          </p>\n        </div>\n      </div>\n    );\n}\n\nexport default Testcard;\n","import React, { Component } from 'react'\nimport \"./testdata.css\"\nimport Testcard from './Testcard'\nimport { connect } from 'react-redux'\nclass Testdata extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                 \n        }\n    }\n\n    render() {\n        return (\n          <div className=\"test-data-card-cont\">\n            {this.props.testData.length!==0?\n           this.props.testData.map(element=>{\n               return (\n                 <Testcard\n                   stateName={element.state}\n                   totalTests={element.totaltested}\n                   negative={element.negative}\n                   positive={element.positive}\n                   notConfirmed={element.unconfirmed}\n                   source={element.source}\n                 />\n               );\n           }):null \n        }\n           \n          </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n  return {\n\n    testData: state.testData,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // fetchStateWise: () => dispatch(fetchStateWise()),\n    // fetchDistrictWise: (stateName) => dispatch(fetchDistrictWise(stateName)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Testdata);\n// export default Testdata\n","import React, { useState } from \"react\";\r\nimport \"./about.css\";\r\nimport \"./mapchart.css\";\r\nimport about from \"./Images/about2.png\";\r\nimport { FiGithub } from \"react-icons/fi\";\r\nimport { FaLinkedin, FaInstagram, FaFacebookF } from \"react-icons/fa\";\r\n\r\n// import MapChart from \"./MapChart\";\r\n// import ReactTooltip from \"react-tooltip\";\r\n// import StateMapChart from \"./StateMapChart\";\r\n\r\nfunction About() {\r\n\r\n\r\n  return (\r\n    <div className=\"about-cont\">\r\n\r\n      <div className=\"credentials-cont\">\r\n        <div className=\"author-card\">\r\n          <div>\r\n            <p className=\"dev-by\">Developed by</p>\r\n            <p className=\"author-name\">Aakash Sangwan</p>\r\n          </div>\r\n          <div className=\"author-links\">\r\n            <a href=\"https://github.com/aakash2408\">\r\n              <span className=\"auth-social-icon\">\r\n                <FiGithub />{\" \"}\r\n              </span>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/aakash-sangwan-0790aa172/\">\r\n              <span className=\"auth-social-icon\">\r\n                <FaLinkedin />{\" \"}\r\n              </span>\r\n            </a>{\" \"}\r\n            {/* <a href=\"https://www.instagram.com/theaakashsangwan/\">\r\n              <span className=\"auth-social-icon\">\r\n                <FaInstagram />{\" \"}\r\n              </span>\r\n            </a>{\" \"} */}\r\n           \r\n          </div>\r\n        </div>\r\n        <div className=\"author-card\">\r\n          <div>\r\n            <p className=\"dev-by\">API by</p>\r\n            <p className=\"author-name\">Covid19 India</p>\r\n          </div>\r\n          <div className=\"author-links\">\r\n            <a\r\n              className=\"git-project-link\"\r\n              href=\"https://github.com/covid19india/covid19india-react\"\r\n            >\r\n              <span>\r\n                {\" \"}\r\n                <FiGithub />\r\n              </span>{\" \"}\r\n              <span>Github Project</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"about-image-cont\">\r\n        <img src={about} alt=\"aa\" className=\"about-img\" />\r\n      </div>\r\n    </div>\r\n    // <div className=\"map-chart\">\r\n    //   <StateMapChart />\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { FiGithub } from \"react-icons/fi\";\r\nimport virus from './Images/virus.png';\r\nimport \"./home.css\"; \r\n\r\nfunction Home() {\r\n    return (\r\n      <div className=\"main-cont\">\r\n      <div className=\"home-cont\">\r\n        <div className=\"project-title\">\r\n           <div className=\"h1-container\">\r\n              <h1>COVID-19</h1>\r\n              <h2>CORONAVIRUS DISEASE</h2>\r\n              {/* <p> A project by <a href=\"https://github.com/Aakash2408\">Aakash Sangwan</a></p>  */}\r\n          </div>\r\n        </div>\r\n        <div className=\"image-container\">\r\n         <img  className=\"image\" src={virus}/>\r\n        </div>\r\n       \r\n\r\n         \r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport Hello from \"./Hello\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Districtwise from \"./Components/Districtwise\";\r\nimport Testdata from \"./Components/Testdata\";\r\nimport About from \"./Components/About\";\r\nimport Home from \"./Components/Home\";\r\nimport { fetchStateWise } from \"./Redux/ActionCreator\";\r\nimport { connect } from \"react-redux\";\r\nimport loader from \"./Components/Images/loader.svg\";\r\nimport \"./App.css\"\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.fetchStateWise();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.loading?\r\n        <div className=\"loader\">\r\n          <img style={{ width: \"10em\" }} src={loader} alt=\"a\" />\r\n        </div>:null }\r\n        {/* <Hello></Hello> */}\r\n        <BrowserRouter>\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route exact path={\"/dashboard\"} component={Dashboard} />{\" \"}\r\n            <Route exact path={\"/districtwise\"} component={Districtwise} />{\" \"}\r\n            <Route exact path={\"/testdata\"} component={Testdata} />{\" \"}\r\n            <Route exact path={\"/about\"} component={About} />{\" \"}\r\n            <Route path={\"/\"} component={Home} />{\" \"}\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateData: state.stateData,\r\n    loading:state.loading\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchStateWise: () => dispatch(fetchStateWise()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n// export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { LOADING, FETCH_STATE_WISE_SUCCESS, FETCH_STATE_WISE_FAIL, SET_TOTAL_CASES, SET_CHART_DATA, SET_CONFIRM_CHART_DATA, SET_TODAY_NEWS, SET_DISTRICT_WISE, SET_STATE_TOTAL, SET_STATE_CODE, SET_STATE_DAILY_CONFIRMED, SET_STATE_DAILY_DEAD, SET_DEAD_CHART_DATA, SET_RECOVERED_CHART_DATA, SET_TEST_DATA, SET_STATE_MAP_DATA, SET_STATE_DISTRICT_DATA } from \"./ActionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  mapData: [],\r\n  setTotalCases: {},\r\n  loading: false,\r\n  chartData: [],\r\n  chatConfirmData: {},\r\n  chartRecoveredData: {},\r\n  chartDeadData: {},\r\n  stateData: [],\r\n  newsUpdate: [],\r\n  districtWiseData: {},\r\n  selectedStateTotal: {},\r\n  selectedStateCode: \"\",\r\n  dailyConfirmed: [],\r\n  dailyDead: [],\r\n  testData: [],\r\n  selectedStateMapData: {},\r\n  stateDistricts:[],\r\n};\r\n\r\nexport default  (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case LOADING:\r\n        return {\r\n          ...state,\r\n          loading: action.payload,\r\n        };\r\n      case FETCH_STATE_WISE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          mapData: [...action.mapData],\r\n          stateData: action.stateData,\r\n        };\r\n      case FETCH_STATE_WISE_FAIL:\r\n        return {\r\n          ...state,\r\n        };\r\n      case SET_TOTAL_CASES:\r\n        return {\r\n          ...state,\r\n          setTotalCases: action.payload,\r\n        };\r\n      case SET_TODAY_NEWS:\r\n        return {\r\n          ...state,\r\n          newsUpdate: action.payload,\r\n        };\r\n      case SET_CHART_DATA:\r\n        return {\r\n          ...state,\r\n          chartData: action.payload,\r\n        };\r\n      case SET_CONFIRM_CHART_DATA:\r\n        return {\r\n          ...state,\r\n          chatConfirmData: action.payload,\r\n        };\r\n\r\n      case SET_DEAD_CHART_DATA:\r\n        return {\r\n          ...state,\r\n          chartDeadData: action.payload,\r\n        };\r\n      case SET_RECOVERED_CHART_DATA:\r\n        return {\r\n          ...state,\r\n          chartRecoveredData: action.payload,\r\n        };\r\n      case SET_DISTRICT_WISE:\r\n        return {\r\n          ...state,\r\n          districtWiseData: action.payload,\r\n        };\r\n      case SET_STATE_TOTAL:\r\n        return {\r\n          ...state,\r\n          selectedStateTotal: action.payload,\r\n        };\r\n      case SET_STATE_DAILY_CONFIRMED:\r\n        return {\r\n          ...state,\r\n          dailyConfirmed: action.payload,\r\n        };\r\n      case SET_STATE_DAILY_DEAD:\r\n        return {\r\n          ...state,\r\n          dailyDead: action.payload,\r\n        };\r\n      case SET_STATE_CODE:\r\n        return {\r\n          ...state,\r\n          selectedStateCode: action.payload,\r\n        };\r\n      case SET_TEST_DATA:\r\n        return {\r\n          ...state,\r\n          testData: action.payload,\r\n        };\r\n      case SET_STATE_MAP_DATA:\r\n        return {\r\n          ...state,\r\n          selectedStateMapData: action.payload,\r\n        };\r\n      case SET_STATE_DISTRICT_DATA:\r\n        return {\r\n          ...state,\r\n          stateDistricts: action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport reducers from './Redux/reducers';\r\nconst store = createStore(reducers,applyMiddleware(thunk,logger))\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}